function getSampleNumber(count) {
    for (let i = 0; i < count; i++) {
        const map = new Set();
        while (map.size < 6) {
            map.add(Math.floor((Math.random() * 10000) % 45) + 1);
        }
        const arrayFromSet = Array.from(map);
        arrayFromSet.sort((a, b) => a - b);
        // console.log(arrayFromSet);
        return arrayFromSet;
    }
}
function getTryCount(expectedSeries) {
    let count = 0;
    while (true) {
        count++;
        const map = new Set();
        while (map.size < 6) {
            map.add(Math.floor((Math.random() * 10000) % 45) + 1);
        }
        const arrayFromSet = Array.from(map);
        arrayFromSet.sort((a, b) => a - b);

        const arraysEqual = (arr1, arr2) => {
            if (arr1.length !== arr2.length) return false;
            for (let i = 0; i < arr1.length; i++) {
                if (arr1[i] !== arr2[i]) return false;
            }
            return true;
        };

        if (arraysEqual(arrayFromSet, expectedSeries)) {
            // console.log(count);
            // console.log(arrayFromSet);
            return count;
        }
    }
}
function main() {
    for (let i = 0; i < iterations; i++) {
        let total = 0;
        let repeat = 7;
        for (let i = 0; i < repeat; i++) {
            total += getTryCount(expectedSeries);
        }
        console.log(total, getSampleNumber(total / 10));
    }
}
function test() {
    console.log(getSampleNumber(432612442));
}
expectedSeries = [6, 7, 19, 28, 34, 41];
iterations = 5;
main();

/* Tester
39764408 [ 5, 11, 19, 35, 36, 45 ]
47250151 [ 10, 11, 24, 28, 35, 38 ]
41702652 [ 1, 18, 21, 23, 24, 28 ]
61757958 [ 3, 4, 5, 11, 27, 41 ]
71120861 [ 3, 15, 29, 35, 43, 45 ]
60882137 [ 2, 10, 11, 20, 24, 40 ]
47741638 [ 8, 9, 28, 31, 32, 37 ]
50461338 [ 1, 23, 24, 33, 39, 41 ]
39024519 [ 10, 16, 29, 31, 36, 42 ]
87088147 [ 1, 10, 16, 26, 37, 45 ]
65883753 [ 2, 5, 16, 20, 22, 44 ]
36752139 [ 8, 17, 23, 32, 33, 35 ]
38959307 [ 3, 18, 21, 22, 25, 41 ]
79348011 [ 3, 7, 26, 27, 39, 40 ]
63242252 [ 5, 10, 16, 17, 36, 43 ]
51660165 [ 10, 20, 22, 29, 32, 34 ]
54614697 [ 6, 10, 20, 34, 35, 39 ]
56714059 [ 2, 4, 14, 28, 33, 39 ]
48333206 [ 6, 9, 20, 21, 31, 38 ]
33283395 [ 7, 11, 15, 19, 20, 41 ]
42471281 [ 11, 18, 28, 32, 39, 44 ]
39104861 [ 7, 20, 26, 29, 38, 40 ]
106392753 [ 2, 5, 13, 20, 23, 30 ]
60884949 [ 6, 7, 9, 13, 31, 42 ]
45447577 [ 2, 14, 28, 31, 32, 43 ]
37898978 [ 2, 8, 17, 22, 33, 41 ]
62044113 [ 7, 8, 18, 19, 39, 45 ]
101900955 [ 3, 7, 29, 34, 36, 38 ]
57114009 [ 6, 7, 23, 27, 30, 40 ]
80254170 [ 4, 6, 21, 28, 29, 40 ]
41352852 [ 7, 10, 19, 21, 35, 43 ]
64784641 [ 16, 21, 23, 25, 30, 36 ]
41639897 [ 6, 8, 15, 31, 32, 38 ]
40976777 [ 4, 6, 18, 33, 34, 36 ]

60906319 [ 1, 15, 22, 37, 40, 44 ]
42554413 [ 1, 6, 17, 30, 41, 44 ]
55973691 [ 2, 5, 7, 20, 27, 32 ]
62698128 [ 16, 17, 23, 25, 32, 35 ]
48272338 [ 3, 5, 28, 32, 35, 43 ]
53310045 [ 12, 16, 26, 36, 41, 44 ]
52465126 [ 4, 14, 25, 32, 44, 45 ]
65549645 [ 10, 21, 23, 26, 38, 43 ]
87537786 [ 2, 8, 30, 33, 40, 41 ]
74785823 [ 10, 15, 16, 17, 20, 23 ]
66405083 [ 4, 5, 34, 37, 42, 44 ]
34987197 [ 8, 16, 20, 28, 30, 34 ]
58420472 [ 10, 11, 15, 18, 34, 40 ]
56884729 [ 3, 6, 9, 19, 30, 43 ]
36407158 [ 4, 16, 26, 36, 41, 43 ]
26782131 [ 10, 17, 24, 34, 36, 38 ]
52041773 [ 2, 11, 14, 25, 33, 45 ]
58342780 [ 19, 22, 25, 32, 39, 42 ]
40730706 [ 14, 35, 36, 41, 43, 44 ]
61626846 [  3, 7, 8, 36, 37, 43 ]
55665210 [ 3, 5, 10, 11, 13, 25 ]

*/

/* 선택 번호
75122377 [ 1, 10, 17, 24, 30, 40 ]
36031286 [ 1, 14, 20, 24, 31, 36 ]
76091034 [ 9, 21, 25, 29, 37, 43 ]
68222476 [ 3, 17, 23, 33, 37, 39 ]
29304863 [ 4, 11, 15, 19, 21, 38 ]

83448911 [ 1, 11, 14, 32, 36, 45 ]
39917673 [ 4, 26, 28, 33, 39, 44 ]
55363865 [ 2, 8, 14, 32, 37, 40 ]
52823673 [ 5, 6, 7, 18, 21, 24 ]
40577812 [ 20, 23, 32, 36, 43, 44 ]

24/08/17 -> [  ] 
24/08/10 -> [ 6, 7, 19, 28, 34, 41 ]
24/08/03 -> [ 1, 2, 6, 14,  27, 38 ]
24/07/27 -> [ 15, 19, 21, 25, 27, 28 ]
24/07/20 -> [ 5, 10, 11, 17, 28, 34 ]
24/07/13 -> [ 1, 5, 8, 16, 28, 33 ]
24/07/06 -> [ 10, 15, 24, 30, 31, 37 ]
24/06/29 -> [ 4, 5, 9, 11, 37, 40 ]
24/06/22 -> [ 6, 14, 25, 33, 40, 44 ]
24/06/15 -> [ 3, 8, 17, 30, 33, 34 ]
24/06/08 -> [ 13, 19, 21, 24, 34, 35 ]
24/06/01 -> [ 3, 6, 21, 30, 34, 35 ]
24/05/25 -> [ 6, 24, 31, 32, 38, 44 ]
*/

/* History
[ 8, 11, 17, 30, 33, 38 ] -> 6/15 4등 
[ 6, 14, 24, 25, 41, 44 ] -> 6/22 4등
[ 14, 15, 25, 32, 34, 40 ] -> 6/22 5등
*/
